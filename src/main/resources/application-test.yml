spring:

  kafka:
    bootstrap-servers: localhost:9094
    properties:
      security.protocol: PLAINTEXT
      request.timeout.ms: 20000
      retry.backoff.ms: 500
      auto:
        offset.reset: earliest
        register.schemas: false
        create.topics.enable: false
      use.latest.version: true
      basic.auth.credentials.source: USER_INFO
    producer:
      client-id: ${spring.application.name}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 5
    consumer:
      group-id: ${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      properties:
        enable-auto-commit: false
    listener:
      ack-mode: manual

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        dialects: org.hibernate.dialect.MySQL57Dialect
        format_sql: true
    database: mysql
    generate-ddl: true
    open-in-view: false
    show-sql: true

  data:
    redis:
      host: 127.0.0.1
      port: 6379
      timeout: 6000ms
      lettuce:
        pool:
          enabled: true
          max-active: 10
          max-idle: 5
          min-idle: 1
          max-wait: 2000ms