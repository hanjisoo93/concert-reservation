openapi: 3.0.0
info:
  title: Concert Reservation API
  description: >
    - 콘서트 예약 서비스를 구현해 봅니다.
  version: 1.0.0

servers:
  - url: https://api.concert-reservation.com/v1
  
tags:
  - name: Token API
  - name: Concert Schedule API
  - name: Concert Seat API
  - name: Reservation API
  - name: Point API
  - name: Payments API

paths:
  /api/tokens/{userId}/access:
    post:
      tags:
        - Token API
      summary: 토큰 발급
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 대기열 토큰을 발급합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: 사용자 식별자
                  status:
                    type: string
                    description: 토큰 상태
                  expired_at:
                    type: string
                    format: date-time
                    description: 토큰 만료 시간
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  code:
                    type: integer
                    description: Error code for debugging
                  details:
                    type: array
                    items:
                      type: string
                    description: Additional error details
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Authentication failed
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Permission denied

  /api/tokens/{userId}:
    get:
      tags:
        - Token API
      summary: 토큰 조회
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 정상적으로 토큰을 조회 했습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        404:
          description: 유효한 토큰을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message

  /api/tokens/expire:
    post:
      tags:
        - Token API
      summary: 토큰 만료
      description: 만료시간이 지난 토큰을 만료 처리합니다.
      responses:
        200:
          description: 정상적으로 토큰 만료 처리를 했습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: 토큰ID
                  uuid:
                    type: string
                    description: 사용자 식별자
                  status:
                    type: string
                    description: 토큰 상태
        404:
          description: 유효한 토큰을 찾을  수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message

  /api/concert/schedule/{concertId}:
    get:
      tags:
        - Concert Schedule API
      summary: 콘서트 스케줄 목록 조회
      description: 콘서트 스케줄 목록을 페이징으로 조회 합니다. 현재 시간 이전 날짜는 조회되지 않습니다.
      parameters:
        - name: concertId
          in: path
          required: true
          schema:
            type: integer
          description: 조회할 콘서트 ID 
      responses:
        200:
          description: 성공적으로 콘서트 스케줄 목록을 반환합니다. 결과는 배열 형식으로 제공되며, 각 항목은 콘서트 스케줄을 나타냅니다.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcertSchedule'
        404:
          description: 해당 콘서트의 콘서트 스케줄을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  code:
                    type: integer
                    description: Error code for debugging
                  details:
                    type: string
                    description: Additional details about the error
                    
  /api/concert/seats:
    get:
      tags:
        - Concert Seat API
      summary: 콘서트 좌석 목록 조회
      description: 콘서트 스케줄 ID를 기반으로 좌석 목록을 조회합니다.
      parameters:
        - name: concertScheduleId
          in: query
          required: true
          schema:
            type: integer
          description: 콘서트 스케줄 ID
      responses:
        200:
          description: 성공적으로 좌석 목록을 반환합니다. 결과는 배열 형식으로 제공되며, 각 항목은 좌석 정보를 나타냅니다.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcertSeat'
        404:
          description: 주어진 콘서트 스케줄 ID에 해당하는 좌석 정보가 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  code:
                    type: integer
                    description: Error code
                  details:
                    type: string
                    description: Additional details about the error
                    
  /api/concert/seats/{concertSeatId}:
    get:
      tags:
        - Concert Seat API
      summary: 콘서트 좌석 상세 조회
      description: 콘서트 좌석 ID를 기반으로 좌석 상세 정보를 조회합니다.
      parameters:
        - name: concertSeatId
          in: path
          required: true
          schema:
            type: integer
          description: 콘서트 좌석 ID
      responses:
        200:
          description: 성공적으로 좌석 정보를 조회했습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcertSeat'
        404:
          description: No seat found with the given ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  code:
                    type: integer
                    description: Error code
                  details:
                    type: string
                    description: Additional details about the error
                    
  /api/concert/reservation/reserve:
    post:
      tags:
        - Reservation API
      summary: 콘서트 좌석 예약 요청
      description: 콘서트 과석 예약 요청을 수행하며, 대기열 검증을 포함합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  $ref: '#/components/schemas/Token'
                concertSeatId:
                  type: integer
                  description: 예약 요청한 좌석 ID
              required:
                - token
                - concertSeatId
      responses:
        200:
          description: 좌석이 성공적으로 예약 요청 되었습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservationId:
                    type: integer
                    description: 예약 ID
        400:
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
        404:
          description: 요청한 좌석 ID를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Seat not found
        409:
          description: 요청한 좌석이 이미 예약되었습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Seat already reserved

  /api/concert/reservation/confirm:
    post:
      tags:
        - Reservation API
      summary: 콘서트 좌석 예약 결과 처리
      description: 콘서트 좌석 예약 결과 처리합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                concertSeatId:
                  type: integer
                  description: 콘서트 좌석 ID
              required:
              - concertSeatId
      responses:
        200:
          description: 콘서트 좌석 예약 결과가 성공적으로 처리 되었습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        400:
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
        404:
          description: 요청한 좌석 ID를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Seat not found
        409:
          description: 요청한 좌석이 이미 예약 상태로 충돌했습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Seat reservation conflict
                    
  /api/point/{userId}:
    get:
      tags:
        - Point API
      summary: 잔액 조회
      description: 특정 사용자의 잔액을 조회합니다.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: 사용자 ID
      responses:
        200:
          description: 성공적으로 잔액을 조회했습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
        404:
          description: 사용자를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: 에러 메시지
                    
  /api/point/add:
    post:
      tags:
        - Point API
      summary: 포인트 충전 요청
      description: 특정 사용자의 포인트트을 충전합니다. 충전 시 포인트트 내역은 `PointHistory`에 기록됩니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 사용자 ID
                amount:
                  type: integer
                  description: 충전할 포인트 (양수만 허용)
              required:
              - userId
              - amount
      responses:
        200:
          description: 성공적으로 포인트를 충전했습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: 사용자 UUID
                  point:
                    type: integer
                    description: 충전 후 포인트
                  amount:
                    type: integer
                    description: 충전된 포인트
                  message:
                    type: string
                    description: 성공적으로 포인트를 충전했습니다.
        400:
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Invalid request
        404:
          description: 사용자를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: User not found
                    
  /api/point/use:
    post:
      tags:
        - Point API
      summary: 포인트 사용 요청
      description: 특정 사용자의 포인트을 사용합니다. 사용 시 포인트 내역은 `PointHistory`에 기록됩니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 사용자 ID
                amount:
                  type: integer
                  description: 사용할 포인트 (양수만 허용)
              required:
                - userId
                - amount
      responses:
        200:
          description: 성공적으로 포인트를 사용했습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: 사용자 UUID
                  point:
                    type: integer
                    description: 사용 후 포인트
                  amount:
                    type: integer
                    description: 사용된 포인트
                  message:
                    type: string
                    description: 성공적으로 포인트를 사용했습니다.
        400:
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Invalid request
        404:
          description: 사용자를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: User not found
        409:
          description: 포인트가 부족하여 요청을 처리할 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Insufficient points

  /api/point/history/{userId}:
    get:
      tags:
        - Point API
      summary: 포인트 변경 기록 조회
      description: 포인트 변경 기록을 조회회한다.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: 사용자 ID
      responses:
        200:
          description: 포인트 변경 기록이 성공적으로 저장되었습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointHistory'
        400:
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Invalid request
                    
  /api/point/history/create:
    post:
      tags:
        - Point API
      summary: 포인트 변경 기록 저장
      description: 포인트 변경 기록을 저장한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 사용자 ID
                amount:
                  type: integer
                  description: 충전할 포인트
                changeType:
                  type: string
                  enum: [DEPOSIT, WITHDRAWAL]
                  description: 포인트 변경 타입 DEPOSIT 충전, WITHDRAWAL 사용
              required:
              - userId
              - amount
              - changeType
      responses:
        200:
          description: 포인트 변경 기록이 성공적으로 저장되었습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointHistory'
        400:
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Invalid request
        404:
          description: 사용자를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: User not found
                    
  /api/payments/process:
    post:
      tags:
        - Payments API
      summary: 결제 처리
      description: 사용자 ID 를 통해 결제 처리를 합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: 사용자 ID
                reservationId:
                  type: integer
                  description: 예약 ID
                amount:
                  type: integer
                  description: 결제 금액
              required:
              - userId
              - reservationId
              - amount
      responses:
        200:
          description: 결제가 성공적으로 처리되었습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
        400:
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Invalid request
        404:
          description: 요청된 사용자를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: 사용자 ID
      required:
      - id
    Point:
      type: object
      properties:
        id:
          type: integer
          description: 잔액 ID
        userId:
          type: integer
          description: 사용자 ID
        amnount:
          type: integer
          description: 잔액
      required:
      - id
      - userId
      - amount
    PointHistory:
      type: object
      properties:
        id:
          type: integer
          description: 잔액 히스토리 ID
        point_id:
          type: integer
          description: 잔액 ID
        change_amount:
          type: number
          format: float
          description: 변경된 금액
        point_after_change:
          type: number
          format: float
          description: 변경 후 잔액
        change_type:
          type: string
          enum: [DEPOSIT, WITHDRAWAL]
          description: 변경 유형
        created_at:
          type: string
          format: date-time
          description: 잔액 정보 등록 일시
      required:
      - id
      - point_id
      - change_amount
      - point_after_change
      - change_type
    Token:
      type: object
      properties:
        id:
          type: integer
          description: 토큰 ID
        uuid:
          type: string
          description: 사용자 식별자
        userId:
          type: integer
          description: 사용자 ID
        status:
          type: string
          enum: [ACTIVE, EXPIRED]
          description: 토큰 상태
        expiredAt:
          type: string
          format: date-time
          description: 토큰 만료 시간
      required:
      - id
      - uuid
      - userId
      - status
      - expriedAt
    ConcertSchedule:
      type: object
      properties:
        id:
          type: integer
          description: 콘서트 스케줄 ID
        concert_date:
          type: string
          format: date
          description: 콘서트 날짜
      required:
      - id
      - concert_date
    ConcertSeat:
      type: object
      properties:
        id:
          type: integer
          description: 콘서트 좌석 ID
        concert_schedule_id:
          type: integer
          description: 콘서트 스케줄 정보 ID
        seat_number:
          type: integer
          description: 좌석 번호
          minimum: 1
          maximum: 50
        status:
          type: string
          description: 좌석 상태
          enum: [AVAILABLE, RESERVED, CONFIRMED]
      required:
      - id
      - concert_schedule_id
      - seat_number
      - status
    Reservation:
      type: object
      properties:
        id:
          type: integer
          description: 예약 ID
        userId:
          type: integer
          description: 사용자 ID
        seatId:
          type: integer
          description: 좌석 ID
        status:
          type: string
          description: 결제 상태
          enum: [PENDING, SUCCESS, FAIL]
        expried_at:
          type: string
          format: date-time
          description: 예약 가능 시간
        created_at:
          type: string
          format: date-time
          description: 예약 등록 일시
      required:
      - id
      - userId
      - seatId
      - status
      - expried_at
      - created_at
    Payments:
      type: object
      properties:
        id:
          type: integer
          description: 결제 ID
        userId:
          type: integer
          description: 사용자 ID
        reservationId:
          type: integer
          description: 예약 ID
        amount:
          type: number
          format: float
          description: 결제 금액
        created_at:
          type: string
          format: date-time
          description: 결제 등록 일시
      required:
      - id
      - userId
      - amount
      - created_at
